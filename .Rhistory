head(vals$data)
})
# 📊 Render histogram based on selected Style
output$distPlot <- renderPlot({
req(vals$data, input$styleChoice)
# Filter data by Style
new_data <- vals$data[grepl(input$styleChoice, vals$data$Style, ignore.case = TRUE), ]
# Combine 4 measurement columns into one long vector
combined <- unlist(new_data[, c("Width Result #1", "Width Result #2",
"Width Result #3", "Width Result #4")])
combined <- as.numeric(combined[!is.na(combined)])
# Pull min/max tolerance from first matching row
min_val <- as.numeric(new_data$Minimum[1])
max_val <- as.numeric(new_data$Maximum[1])
# Create and return the ggplot histogram
ggplot(data.frame(Value = combined), aes(x = Value)) +
geom_histogram(binwidth = 0.05, fill = "skyblue", color = "black", boundary = 0) +
geom_vline(xintercept = c(min_val, max_val), color = "red", linetype = "dashed") +
labs(
title = paste(input$styleChoice, "Tolerance Distribution"),
x = "Edge Width (mm)",
y = "Count"
) +
theme_minimal()
})
# 📎 Legacy histogram (if you still want it)
output$mistPlot <- renderPlot({
x <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
hist(x, breaks = bins, col = 'darkgray', border = 'white',
xlab = 'Waiting time to next eruption (in mins)',
main = 'Histogram of waiting times')
})
# 📈 Optional summary stats
output$summary <- renderPrint({
summary(faithful[, 2])
})
# 🧠 Update dropdown choices dynamically from sheet
observe({
req(vals$data)
updateSelectInput(session, "styleChoice",
choices = unique(vals$data$Style))
})
}
library(shiny)
library(shiny)
# Define UI with top navigation (page tabs)
ui <- navbarPage("MMI Textiles Manufacturing Summary",
# Tab 1: Introduction
tabPanel("Introduction",
mainPanel(
h4("How to use this app:"),
p("Adjust the number of bins using the slider on the Histogram tab."),
p("View a statistical summary in the Summary tab.")
)
),
# Tab 2: Google Form Histogram
tabPanel("Google Form",
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
mainPanel(
plotOutput("mistPlot")  # Legacy histogram from faithful data
)
)
),
# Tab 3: Tolerance Graphs
tabPanel("Tolerance Graphs",
sidebarLayout(
sidebarPanel(
actionButton("reload", "Reload Data"),
selectInput(
inputId = "styleChoice",  # 🔧 Matches server.R input
label = "Style:",
choices = c("WBNYB00041", "GGNYB00057", "GGNYB00019"),
selected = "WBNYB00041"
),
selectInput(
inputId = "timeRange_tolerance",
label = "Time Range:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
),
selectInput(
inputId = "loom_tolerance",
label = "Loom:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
)
),
mainPanel(
plotOutput("distPlot")  # Matches server's tolerance histogram
)
)
),
# Tab 4: CPK Graphs
tabPanel("CPK Graphs",
sidebarLayout(
sidebarPanel(
actionButton("reloadData", "Reload Data"),
selectInput(
inputId = "style_cpk",
label = "Style:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
),
selectInput(
inputId = "timeRange_cpk",
label = "Time Range:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
),
selectInput(
inputId = "loom_cpk",
label = "Loom:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
)
),
mainPanel(
plotOutput("cpkPlot")  # You can define this output in server if needed
)
)
),
# Tab 5: Tolerance and CPK Data Instructions
tabPanel("Tolerance and CPK Data",
mainPanel(
h4("How to use this app:"),
p("Adjust the number of bins using the slider on the Histogram tab."),
p("View a statistical summary in the Summary tab.")
)
)
)
# Define UI with top navigation (page tabs)
ui <- navbarPage("MMI Textiles Manufacturing Summary",
# Tab 1: Introduction
tabPanel("Introduction",
mainPanel(
h4("How to use this app:"),
p("Adjust the number of bins using the slider on the Histogram tab."),
p("View a statistical summary in the Summary tab.")
)
),
# Tab 2: Google Form Histogram
tabPanel("Google Form",
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
mainPanel(
plotOutput("mistPlot")  # Legacy histogram from faithful data
)
)
),
# Tab 3: Tolerance Graphs
tabPanel("Tolerance Graphs",
sidebarLayout(
sidebarPanel(
actionButton("reload", "Reload Data"),
selectInput(
inputId = "styleChoice",  # 🔧 Matches server.R input
label = "Style:",
choices = c("WBNYB00041", "GGNYB00057", "GGNYB00019"),
selected = "WBNYB00041"
),
selectInput(
inputId = "timeRange_tolerance",
label = "Time Range:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
),
selectInput(
inputId = "loom_tolerance",
label = "Loom:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
)
),
mainPanel(
plotOutput("distPlot")  # Matches server's tolerance histogram
)
)
),
# Tab 4: CPK Graphs
tabPanel("CPK Graphs",
sidebarLayout(
sidebarPanel(
actionButton("reloadData", "Reload Data"),
selectInput(
inputId = "style_cpk",
label = "Style:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
),
selectInput(
inputId = "timeRange_cpk",
label = "Time Range:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
),
selectInput(
inputId = "loom_cpk",
label = "Loom:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
)
),
mainPanel(
plotOutput("cpkPlot")  # You can define this output in server if needed
)
)
),
# Tab 5: Tolerance and CPK Data Instructions
tabPanel("Tolerance and CPK Data",
mainPanel(
h4("How to use this app:"),
p("Adjust the number of bins using the slider on the Histogram tab."),
p("View a statistical summary in the Summary tab.")
)
)
)
clear
# Define UI with top navigation (page tabs)
ui <- navbarPage("MMI Textiles Manufacturing Summary",
# Tab 1: Introduction
tabPanel("Introduction",
mainPanel(
h4("How to use this app:"),
p("Adjust the number of bins using the slider on the Histogram tab."),
p("View a statistical summary in the Summary tab.")
)
),
# Tab 2: Google Form Histogram
tabPanel("Google Form",
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
mainPanel(
plotOutput("mistPlot")  # Legacy histogram from faithful data
)
)
),
# Tab 3: Tolerance Graphs
tabPanel("Tolerance Graphs",
sidebarLayout(
sidebarPanel(
actionButton("reload", "Reload Data"),
selectInput(
inputId = "styleChoice",  # 🔧 Matches server.R input
label = "Style:",
choices = c("WBNYB00041", "GGNYB00057", "GGNYB00019"),
selected = "WBNYB00041"
),
selectInput(
inputId = "timeRange_tolerance",
label = "Time Range:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
),
selectInput(
inputId = "loom_tolerance",
label = "Loom:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
)
),
mainPanel(
plotOutput("distPlot")  # Matches server's tolerance histogram
)
)
),
# Tab 4: CPK Graphs
tabPanel("CPK Graphs",
sidebarLayout(
sidebarPanel(
actionButton("reloadData", "Reload Data"),
selectInput(
inputId = "style_cpk",
label = "Style:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
),
selectInput(
inputId = "timeRange_cpk",
label = "Time Range:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
),
selectInput(
inputId = "loom_cpk",
label = "Loom:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
)
),
mainPanel(
plotOutput("cpkPlot")  # You can define this output in server if needed
)
)
),
# Tab 5: Tolerance and CPK Data Instructions
tabPanel("Tolerance and CPK Data",
mainPanel(
h4("How to use this app:"),
p("Adjust the number of bins using the slider on the Histogram tab."),
p("View a statistical summary in the Summary tab.")
)
)
)
# Define UI with top navigation (page tabs)
ui <- navbarPage("MMI Textiles Manufacturing Summary",
# Tab 1: Introduction
tabPanel("Introduction",
mainPanel(
h4("How to use this app:"),
p("Adjust the number of bins using the slider on the Histogram tab."),
p("View a statistical summary in the Summary tab.")
)
),
# Tab 2: Google Form Histogram
tabPanel("Google Form",
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
mainPanel(
plotOutput("mistPlot")  # Legacy histogram from faithful data
)
)
),
# Tab 3: Tolerance Graphs
tabPanel("Tolerance Graphs",
sidebarLayout(
sidebarPanel(
actionButton("reload", "Reload Data"),
selectInput(
inputId = "styleChoice",  # 🔧 Matches server.R input
label = "Style:",
choices = c("WBNYB00041", "GGNYB00057", "GGNYB00019"),
selected = "WBNYB00041"
),
selectInput(
inputId = "timeRange_tolerance",
label = "Time Range:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
),
selectInput(
inputId = "loom_tolerance",
label = "Loom:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
)
),
mainPanel(
plotOutput("distPlot")  # Matches server's tolerance histogram
)
)
),
# Tab 4: CPK Graphs
tabPanel("CPK Graphs",
sidebarLayout(
sidebarPanel(
actionButton("reloadData", "Reload Data"),
selectInput(
inputId = "style_cpk",
label = "Style:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
),
selectInput(
inputId = "timeRange_cpk",
label = "Time Range:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
),
selectInput(
inputId = "loom_cpk",
label = "Loom:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
)
),
mainPanel(
plotOutput("cpkPlot")  # You can define this output in server if needed
)
)
),
# Tab 5: Tolerance and CPK Data Instructions
tabPanel("Tolerance and CPK Data",
mainPanel(
h4("How to use this app:"),
p("Adjust the number of bins using the slider on the Histogram tab."),
p("View a statistical summary in the Summary tab.")
)
)
)
# Define UI with top navigation (page tabs)
ui <- navbarPage("MMI Textiles Manufacturing Summary",
# Tab 1: Introduction
tabPanel("Introduction",
mainPanel(
h4("How to use this app:"),
p("Adjust the number of bins using the slider on the Histogram tab."),
p("View a statistical summary in the Summary tab.")
)
),
# Tab 2: Google Form Histogram
tabPanel("Google Form",
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
mainPanel(
plotOutput("mistPlot")  # Legacy histogram from faithful data
)
)
),
# Tab 3: Tolerance Graphs
tabPanel("Tolerance Graphs",
sidebarLayout(
sidebarPanel(
actionButton("reload", "Reload Data"),
selectInput(
inputId = "styleChoice",  # 🔧 Matches server.R input
label = "Style:",
choices = c("WBNYB00041", "GGNYB00057", "GGNYB00019"),
selected = "WBNYB00041"
),
selectInput(
inputId = "timeRange_tolerance",
label = "Time Range:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
),
selectInput(
inputId = "loom_tolerance",
label = "Loom:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
)
),
mainPanel(
plotOutput("distPlot")  # Matches server's tolerance histogram
)
)
),
# Tab 4: CPK Graphs
tabPanel("CPK Graphs",
sidebarLayout(
sidebarPanel(
actionButton("reloadData", "Reload Data"),
selectInput(
inputId = "style_cpk",
label = "Style:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
),
selectInput(
inputId = "timeRange_cpk",
label = "Time Range:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
),
selectInput(
inputId = "loom_cpk",
label = "Loom:",
choices = c("Option 1", "Option 2", "Option 3"),
selected = "Option 1"
)
),
mainPanel(
plotOutput("cpkPlot")  # You can define this output in server if needed
)
)
),
# Tab 5: Tolerance and CPK Data Instructions
tabPanel("Tolerance and CPK Data",
mainPanel(
h4("How to use this app:"),
p("Adjust the number of bins using the slider on the Histogram tab."),
p("View a statistical summary in the Summary tab.")
)
)
)
prin('hello')
print('hello')
shiny::runApp('C:/Users/janha/Desktop/h')
load("~/.RData")
runApp('C:/Users/janha/Desktop/h')
